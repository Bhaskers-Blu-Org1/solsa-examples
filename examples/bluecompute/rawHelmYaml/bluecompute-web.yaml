# Source: web/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: bluecompute
    micro: web-bff
    tier: frontend
    implementation: microprofile
    release: bluecompute
    chart: web-0.1.0
  name: bluecompute-web-config
  namespace: bluecompute
data:
  checks: "# Check the main website, including text content\r\n/\tIBM Cloud Architecture\r\n\r\n#Check
    the Inventory page\r\n/catalog/ Dayton Meat Chopper\r\n\r\n# Check for stylesheets
    and for text content in stylesheets\r\n/stylesheets/font-awesome/font-awesome.css
    \   @font-face\r\n\r\n\r\n# Check a sub-domain\r\n#//some-subdomain.some-site.com/reviews
    Review Data\r\n\r\n# Check HTTP access, and for text content\r\n# http://localhost:8000\tBlueCompute
    Store!\r\n# http://localhost:8000/inventory/\tDayton Meat Chopper\r\n"
  default.json: |
    {
      "Application": {
        "cluster_name": "",
        "region": ""
      },
      "Auth-Server": {
        "client_id":"bluecomputeweb",
        "client_secret":"bluecomputewebs3cret"
      },
      "APIs": {
        "protocol": "http",
        "protocols": "https",
        "catalog": {
          "service_name": "bluecompute-catalog:9080/catalog",
          "base_path": "/rest",
          "require": [
          ]
        },
        "order": {
          "service_name": "bluecompute-orders:9443/orders",
          "base_path": "/rest",
          "require": [
            "oauth"
          ]
        },
        "review": {
          "base_path": "/api",
          "require": [
            "oauth"
          ]
        },
        "customerService": {
          "service_name": "bluecompute-customer:9443/customer",
          "base_path": "/rest",
          "paths": {
            "customer": "/customer"
          },
          "require": [
              "oauth"
          ],
          "redirect_url": "http://localhost"
        },
        "customer": {
            "service_name": "bluecompute-auth:9443/oidc/endpoint",
            "base_path": "/OP",
            "paths": {
              "userinfo": "/userinfo"
            },
            "require": [
              "oauth"
            ],
            "redirect_url": "http://localhost"
        },
        "oauth20": {
          "protocol": "https",
          "service_name": "bluecompute-auth:9443/oidc/endpoint",
          "base_path": "/OP",
          "paths": {
            "authz": "/authorize",
            "token": "/token"
          },
          "grant_types": [
            "password"
          ],
          "scopes": [
            "bluecompute"
          ],
          "redirect_url": "http://localhost"
        }
      }
    }
---
# Source: web/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bluecompute-web
  namespace: bluecompute
  labels:
    app: bluecompute
    micro: web-bff
    tier: frontend
    implementation: microprofile
    release: bluecompute
    chart: web-0.1.0
spec:
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8000



  selector:
    app: bluecompute
    micro: web-bff
    tier: frontend
    release: bluecompute
    implementation: microprofile
---
# Source: web/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: bluecompute-web
  labels:
    app: bluecompute
    micro: web-bff
    tier: frontend
    implementation: microprofile
    release: bluecompute
    chart: web-0.1.0
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: bluecompute
        micro: web-bff
        tier: frontend
        release: bluecompute
        implementation: microprofile
    spec:
      containers:
      - name: web
        image: ibmcase/bc-web-mp:v2.0.0
        imagePullPolicy: Always 
        ports:
        - containerPort: 8000
          protocol: TCP
        volumeMounts:
        - name: config-volume
          mountPath: /StoreWebApp/config
      volumes:
      - name: config-volume
        configMap:
          name: bluecompute-web-config
          items:
          - key: checks
            path: checks
          - key: default.json
            path: default.json
